version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - REDIS_HOST=redis
      - USER_SERVICE_HOST=nginx-user
      - ACTIVITY_SERVICE_HOST=nginx-activity
    depends_on:
      - redis
      - nginx-user
      - nginx-activity
    networks:
      - app-network

  # User Service Instances
  user-service-1:
    build: ./user-service
    environment:
      - REDIS_HOST=redis
    networks:
      - app-network

  user-service-2:
    build: ./user-service
    environment:
      - REDIS_HOST=redis
    networks:
      - app-network

  user-service-3:
    build: ./user-service
    environment:
      - REDIS_HOST=redis
    networks:
      - app-network

  # Nginx Load Balancer for User Service
  nginx-user:
    image: nginx:latest
    ports:
      - "50051:50051"
    volumes:
      - ./nginx/user_nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service-1
      - user-service-2
      - user-service-3
    networks:
      - app-network

  # Activity Service Instances
  activity-service-1:
    build: ./activity-service
    environment:
      - MONGO_HOST=mongo
      - REDIS_HOST=redis
    depends_on:
      - mongo
    networks:
      - app-network

  activity-service-2:
    build: ./activity-service
    environment:
      - MONGO_HOST=mongo
      - REDIS_HOST=redis
    depends_on:
      - mongo
    networks:
      - app-network

  activity-service-3:
    build: ./activity-service
    environment:
      - MONGO_HOST=mongo
      - REDIS_HOST=redis
    depends_on:
      - mongo
    networks:
      - app-network

  # Nginx Load Balancer for Activity Service
  nginx-activity:
    image: nginx:latest
    ports:
      - "50052:50052"
    volumes:
      - ./nginx/activity_nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - activity-service-1
      - activity-service-2
      - activity-service-3
    networks:
      - app-network

  # Redis
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    networks:
      - app-network

  # MongoDB
  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    networks:
      - app-network

  # ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.6
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.6
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    networks:
      - elk

networks:
  app-network:
  elk:
